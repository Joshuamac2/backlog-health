{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/components/tables/AwaitingTableTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AwaitingTableTest() {\n  _s();\n  const [awaitingData, setAwaitingData] = useState(null);\n  const [selectedEpic, setSelectedEpic] = useState(null);\n  useEffect(() => {\n    const fetchAwaiting = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/awaiting-data`);\n        if (!response.ok) {\n          throw new Error('Network response for awaiting data was not ok');\n        }\n        const data = await response.json();\n        setAwaitingData(data);\n      } catch (error) {\n        console.error('Error fetching awaiting data:', error);\n      }\n    };\n    fetchAwaiting();\n  }, []);\n\n  // Group issues by epic name\n  const groupedByEpic = {};\n  if (awaitingData) {\n    awaitingData.forEach(issue => {\n      const epicName = issue.epicName;\n      if (!groupedByEpic[epicName]) {\n        groupedByEpic[epicName] = [];\n      }\n      groupedByEpic[epicName].push(issue);\n    });\n  }\n  const handleEpicClick = epicName => {\n    setSelectedEpic(epicName);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Awaiting Approval Issues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Epic Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(groupedByEpic).map(epicName => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleEpicClick(epicName),\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: epicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)\n        }, epicName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), selectedEpic && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Issues for Epic: \", selectedEpic]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: groupedByEpic[selectedEpic].map(issue => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [issue.key, \" - \", issue.storyPoints]\n        }, issue.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(AwaitingTableTest, \"JvTE51tPYTzOATH1A6N/QZSwWKc=\");\n_c = AwaitingTableTest;\nexport default AwaitingTableTest;\nvar _c;\n$RefreshReg$(_c, \"AwaitingTableTest\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AwaitingTableTest","_s","awaitingData","setAwaitingData","selectedEpic","setSelectedEpic","fetchAwaiting","response","fetch","ok","Error","data","json","error","console","groupedByEpic","forEach","issue","epicName","push","handleEpicClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","key","storyPoints","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/components/tables/AwaitingTableTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction AwaitingTableTest() {\n    const [awaitingData, setAwaitingData] = useState(null);\n    const [selectedEpic, setSelectedEpic] = useState(null);\n\n    useEffect(() => {\n        const fetchAwaiting = async () => {\n            try {\n                const response = await fetch(`http://localhost:4000/api/awaiting-data`);\n                if (!response.ok) {\n                    throw new Error('Network response for awaiting data was not ok');\n                }\n                const data = await response.json();\n                setAwaitingData(data);\n            } catch (error) {\n                console.error('Error fetching awaiting data:', error);\n            }\n        };\n\n        fetchAwaiting();\n    }, []);\n\n    // Group issues by epic name\n    const groupedByEpic = {};\n    if (awaitingData) {\n        awaitingData.forEach(issue => {\n            const epicName = issue.epicName;\n            if (!groupedByEpic[epicName]) {\n                groupedByEpic[epicName] = [];\n            }\n            groupedByEpic[epicName].push(issue);\n        });\n    }\n\n    const handleEpicClick = epicName => {\n        setSelectedEpic(epicName);\n    };\n\n    return (\n        <div>\n            <h2>Awaiting Approval Issues</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Epic Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(groupedByEpic).map(epicName => (\n                        <tr key={epicName} onClick={() => handleEpicClick(epicName)}>\n                            <td>{epicName}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            {selectedEpic && (\n                <div>\n                    <h3>Issues for Epic: {selectedEpic}</h3>\n                    <ul>\n                        {groupedByEpic[selectedEpic].map(issue => (\n                            <li key={issue.key}>{issue.key} - {issue.storyPoints}</li>\n                        ))}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default AwaitingTableTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}