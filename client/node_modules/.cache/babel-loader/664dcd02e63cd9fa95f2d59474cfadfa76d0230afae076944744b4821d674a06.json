{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/components/tables/AwaitingTableTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Modal from '@mui/material/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AwaitingTableTest() {\n  _s();\n  var _groupedByEpic$select;\n  const [awaitingData, setAwaitingData] = useState(null);\n  const [selectedEpic, setSelectedEpic] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    const fetchAwaiting = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/awaiting-data`);\n        if (!response.ok) {\n          throw new Error('Network response for awaiting data was not ok');\n        }\n        const data = await response.json();\n        setAwaitingData(data);\n      } catch (error) {\n        console.error('Error fetching awaiting data:', error);\n      }\n    };\n    fetchAwaiting();\n  }, []);\n\n  // Group issues by epic name\n  const groupedByEpic = {};\n  if (awaitingData) {\n    awaitingData.forEach(issue => {\n      const epicName = issue.epicName;\n      if (!groupedByEpic[epicName]) {\n        groupedByEpic[epicName] = [];\n      }\n      groupedByEpic[epicName].push(issue);\n    });\n  }\n  const handleEpicClick = epicName => {\n    setSelectedEpic(epicName);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Awaiting Approval Issues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Epic Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Object.keys(groupedByEpic).map(epicName => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => handleEpicClick(epicName),\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: epicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this)\n        }, epicName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Issues for Epic: \", selectedEpic]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: (_groupedByEpic$select = groupedByEpic[selectedEpic]) === null || _groupedByEpic$select === void 0 ? void 0 : _groupedByEpic$select.map(issue => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [issue.key, \" - \", issue.storyPoints]\n          }, issue.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(AwaitingTableTest, \"7dzAQb6eZ41v1hYYowajAno1NoA=\");\n_c = AwaitingTableTest;\nexport default AwaitingTableTest;\nvar _c;\n$RefreshReg$(_c, \"AwaitingTableTest\");","map":{"version":3,"names":["React","useState","useEffect","Modal","jsxDEV","_jsxDEV","AwaitingTableTest","_s","_groupedByEpic$select","awaitingData","setAwaitingData","selectedEpic","setSelectedEpic","modalOpen","setModalOpen","fetchAwaiting","response","fetch","ok","Error","data","json","error","console","groupedByEpic","forEach","issue","epicName","push","handleEpicClick","handleCloseModal","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","open","onClose","key","storyPoints","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/components/tables/AwaitingTableTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Modal from '@mui/material/Modal';\n\nfunction AwaitingTableTest() {\n    const [awaitingData, setAwaitingData] = useState(null);\n    const [selectedEpic, setSelectedEpic] = useState(null);\n    const [modalOpen, setModalOpen] = useState(false);\n\n    useEffect(() => {\n        const fetchAwaiting = async () => {\n            try {\n                const response = await fetch(`http://localhost:4000/api/awaiting-data`);\n                if (!response.ok) {\n                    throw new Error('Network response for awaiting data was not ok');\n                }\n                const data = await response.json();\n                setAwaitingData(data);\n            } catch (error) {\n                console.error('Error fetching awaiting data:', error);\n            }\n        };\n\n        fetchAwaiting();\n    }, []);\n\n    // Group issues by epic name\n    const groupedByEpic = {};\n    if (awaitingData) {\n        awaitingData.forEach(issue => {\n            const epicName = issue.epicName;\n            if (!groupedByEpic[epicName]) {\n                groupedByEpic[epicName] = [];\n            }\n            groupedByEpic[epicName].push(issue);\n        });\n    }\n\n    const handleEpicClick = epicName => {\n        setSelectedEpic(epicName);\n        setModalOpen(true);\n    };\n\n    const handleCloseModal = () => {\n        setModalOpen(false);\n    };\n\n    return (\n        <div>\n            <h2>Awaiting Approval Issues</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Epic Name</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.keys(groupedByEpic).map(epicName => (\n                        <tr key={epicName} onClick={() => handleEpicClick(epicName)}>\n                            <td>{epicName}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <Modal open={modalOpen} onClose={handleCloseModal}>\n                <div>\n                    <h3>Issues for Epic: {selectedEpic}</h3>\n                    <ul>\n                        {groupedByEpic[selectedEpic]?.map(issue => (\n                            <li key={issue.key}>{issue.key} - {issue.storyPoints}</li>\n                        ))}\n                    </ul>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default AwaitingTableTest;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}