{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/TotalStoryPointBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TotalStoryPointBarChart() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('http://localhost:4000/api/available-sp').then(response => response.json()).then(data => {\n      // Set the fetched data to the state\n      setChartData(data);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: chartData ? /*#__PURE__*/_jsxDEV(BarChart, {\n      xAxis: [{\n        scaleType: 'band',\n        data: chartData.xAxisData\n      }],\n      series: [{\n        data: chartData.seriesData\n      }],\n      width: 500,\n      height: 300\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(TotalStoryPointBarChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = TotalStoryPointBarChart;\nexport default TotalStoryPointBarChart;\nvar _c;\n$RefreshReg$(_c, \"TotalStoryPointBarChart\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","jsxDEV","_jsxDEV","TotalStoryPointBarChart","_s","chartData","setChartData","fetch","then","response","json","data","catch","error","console","children","xAxis","scaleType","xAxisData","series","seriesData","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/TotalStoryPointBarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\n\nfunction TotalStoryPointBarChart() {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    // Fetch data from the API\n    fetch('http://localhost:4000/api/available-sp')\n      .then(response => response.json())\n      .then(data => {\n        // Set the fetched data to the state\n        setChartData(data);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  return (\n    <div>\n      {chartData ? (\n        <BarChart\n          xAxis={[{ scaleType: 'band', data: chartData.xAxisData }]}\n          series={[{ data: chartData.seriesData }]}\n          width={500}\n          height={300}\n        />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n\nexport default TotalStoryPointBarChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,uBAAuBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAQ,KAAK,CAAC,wCAAwC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ;MACAL,YAAY,CAACK,IAAI,CAAC;IACpB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,EACGV,SAAS,gBACRH,OAAA,CAACF,QAAQ;MACPgB,KAAK,EAAE,CAAC;QAAEC,SAAS,EAAE,MAAM;QAAEN,IAAI,EAAEN,SAAS,CAACa;MAAU,CAAC,CAAE;MAC1DC,MAAM,EAAE,CAAC;QAAER,IAAI,EAAEN,SAAS,CAACe;MAAW,CAAC,CAAE;MACzCC,KAAK,EAAE,GAAI;MACXC,MAAM,EAAE;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,gBAEFxB,OAAA;MAAAa,QAAA,EAAG;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CA9BQD,uBAAuB;AAAAwB,EAAA,GAAvBxB,uBAAuB;AAgChC,eAAeA,uBAAuB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}