{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sprData, setSprData] = useState([]);\n  const [blockedSprData, setBlockedSprData] = useState([]);\n  const fetchData = async () => {\n    try {\n      const responseSpr = await fetch('http://localhost:4000/jira/spr');\n      const responseDataSpr = await responseSpr.json();\n      setSprData(responseDataSpr.issues);\n      const responseBlockedSpr = await fetch('http://localhost:4000/jira/blocked-spr');\n      const responseDataBlockedSpr = await responseBlockedSpr.json();\n      setBlockedSprData(responseDataBlockedSpr.issues);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Transform data into the format expected by Chart.js\n  const transformData = data => ({\n    labels: data.map(issue => issue.key),\n    // Use issue keys as labels\n    datasets: [{\n      label: 'Story Points',\n      data: data.map(issue => issue.fields.customfield_10004),\n      // Use story points as data values\n      backgroundColor: ['rgba(255, 99, 132, 0.6)',\n      // Red\n      'rgba(54, 162, 235, 0.6)',\n      // Blue\n      'rgba(255, 206, 86, 0.6)',\n      // Yellow\n      'rgba(75, 192, 192, 0.6)',\n      // Green\n      'rgba(153, 102, 255, 0.6)' // Purple\n      ],\n      borderWidth: 1\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JIRA Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Spr Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: transformData(sprData) // Pass transformed data to the Pie component\n        ,\n        options: {\n          // Add your options here\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Blocked Spr Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pie, {\n        data: transformData(blockedSprData) // Pass transformed data to the Pie component\n        ,\n        options: {\n          // Add your options here\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tvXsSxKNk9GA/V440oRk5VCj5sI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Pie","jsxDEV","_jsxDEV","App","_s","sprData","setSprData","blockedSprData","setBlockedSprData","fetchData","responseSpr","fetch","responseDataSpr","json","issues","responseBlockedSpr","responseDataBlockedSpr","error","console","transformData","data","labels","map","issue","key","datasets","label","fields","customfield_10004","backgroundColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","options","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Pie } from 'react-chartjs-2';\n\nfunction App() {\n  const [sprData, setSprData] = useState([]);\n  const [blockedSprData, setBlockedSprData] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const responseSpr = await fetch('http://localhost:4000/jira/spr');\n      const responseDataSpr = await responseSpr.json();\n      setSprData(responseDataSpr.issues);\n\n      const responseBlockedSpr = await fetch('http://localhost:4000/jira/blocked-spr');\n      const responseDataBlockedSpr = await responseBlockedSpr.json();\n      setBlockedSprData(responseDataBlockedSpr.issues);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Transform data into the format expected by Chart.js\n  const transformData = (data) => ({\n    labels: data.map(issue => issue.key), // Use issue keys as labels\n    datasets: [\n      {\n        label: 'Story Points',\n        data: data.map(issue => issue.fields.customfield_10004), // Use story points as data values\n        backgroundColor: [\n          'rgba(255, 99, 132, 0.6)', // Red\n          'rgba(54, 162, 235, 0.6)', // Blue\n          'rgba(255, 206, 86, 0.6)', // Yellow\n          'rgba(75, 192, 192, 0.6)', // Green\n          'rgba(153, 102, 255, 0.6)', // Purple\n        ],\n        borderWidth: 1,\n      },\n    ],\n  });\n\n  return (\n    <div>\n      <h1>JIRA Data</h1>\n      <div>\n        <h2>Spr Data</h2>\n        <Pie\n          data={transformData(sprData)} // Pass transformed data to the Pie component\n          options={{\n            // Add your options here\n          }}\n        />\n      </div>\n      <div>\n        <h2>Blocked Spr Data</h2>\n        <Pie\n          data={transformData(blockedSprData)} // Pass transformed data to the Pie component\n          options={{\n            // Add your options here\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MACjE,MAAMC,eAAe,GAAG,MAAMF,WAAW,CAACG,IAAI,CAAC,CAAC;MAChDP,UAAU,CAACM,eAAe,CAACE,MAAM,CAAC;MAElC,MAAMC,kBAAkB,GAAG,MAAMJ,KAAK,CAAC,wCAAwC,CAAC;MAChF,MAAMK,sBAAsB,GAAG,MAAMD,kBAAkB,CAACF,IAAI,CAAC,CAAC;MAC9DL,iBAAiB,CAACQ,sBAAsB,CAACF,MAAM,CAAC;IAClD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,aAAa,GAAIC,IAAI,KAAM;IAC/BC,MAAM,EAAED,IAAI,CAACE,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACC,GAAG,CAAC;IAAE;IACtCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrBN,IAAI,EAAEA,IAAI,CAACE,GAAG,CAACC,KAAK,IAAIA,KAAK,CAACI,MAAM,CAACC,iBAAiB,CAAC;MAAE;MACzDC,eAAe,EAAE,CACf,yBAAyB;MAAE;MAC3B,yBAAyB;MAAE;MAC3B,yBAAyB;MAAE;MAC3B,yBAAyB;MAAE;MAC3B,0BAA0B,CAAE;MAAA,CAC7B;MACDC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;EAEF,oBACE5B,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBjC,OAAA,CAACF,GAAG;QACFoB,IAAI,EAAED,aAAa,CAACd,OAAO,CAAE,CAAC;QAAA;QAC9B+B,OAAO,EAAE;UACP;QAAA;MACA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNjC,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBjC,OAAA,CAACF,GAAG;QACFoB,IAAI,EAAED,aAAa,CAACZ,cAAc,CAAE,CAAC;QAAA;QACrC6B,OAAO,EAAE;UACP;QAAA;MACA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/B,EAAA,CAhEQD,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AAkEZ,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}