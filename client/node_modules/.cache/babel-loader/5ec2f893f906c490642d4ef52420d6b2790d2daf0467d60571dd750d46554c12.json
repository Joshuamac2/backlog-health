{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/components/chart/TotalChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { FcBarChart } from \"react-icons/fc\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TotalChart() {\n  _s();\n  const [available, setAvailable] = useState(null);\n  const [awaiting, setAwaiting] = useState(null);\n  const [blocked, setBlocked] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAvailable = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/available`);\n        if (!response.ok) {\n          throw new Error('Network response for available data was not ok');\n        }\n        const data = await response.json();\n        setAvailable(data);\n      } catch (error) {\n        console.error('Error fetching available data:', error);\n        setError(error);\n      }\n    };\n    const fetchAwaiting = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/awaiting`);\n        if (!response.ok) {\n          throw new Error('Network response for awaiting data was not ok');\n        }\n        const data = await response.json();\n        setAwaiting(data);\n      } catch (error) {\n        console.error('Error fetching awaiting data:', error);\n        setError(error);\n      }\n    };\n    const fetchBlocked = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/blocked`);\n        if (!response.ok) {\n          throw new Error('Network response for blocked data was not ok');\n        }\n        const data = await response.json();\n        setBlocked(data);\n      } catch (error) {\n        console.error('Error fetching blocked data:', error);\n        setError(error);\n      }\n    };\n    fetchAvailable();\n    fetchAwaiting();\n    fetchBlocked();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            textAlign: 'left'\n          },\n          children: \"Story Points Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          style: {\n            textAlign: 'left',\n            fontSize: '15px'\n          },\n          children: \"Review the state of the backlog\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '50px',\n          marginBottom: '20px',\n          padding: '10px',\n          borderRadius: '10px',\n          color: 'red'\n        },\n        children: /*#__PURE__*/_jsxDEV(FcBarChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(BarChart, {\n      xAxis: [{\n        scaleType: 'band',\n        data: ['Available', 'Awaiting Client', 'Blocked']\n      }],\n      series: [{\n        data: [available, awaiting, blocked]\n      }],\n      width: 500,\n      height: 300,\n      sx: {\n        \"& .MuiBarElement-root:nth-of-type(1)\": {\n          fill: \"#0F415A\"\n        },\n        \"& .MuiBarElement-root:nth-of-type(2)\": {\n          fill: \"#EC1D24\"\n        },\n        \"& .MuiBarElement-root:nth-of-type(3)\": {\n          fill: \"#EC1D24\"\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(TotalChart, \"SbcEY7IXOkzYJoP64PucC6AXDr0=\");\n_c = TotalChart;\nexport default TotalChart;\nvar _c;\n$RefreshReg$(_c, \"TotalChart\");","map":{"version":3,"names":["React","useState","useEffect","BarChart","FcBarChart","jsxDEV","_jsxDEV","TotalChart","_s","available","setAvailable","awaiting","setAwaiting","blocked","setBlocked","error","setError","fetchAvailable","response","fetch","ok","Error","data","json","console","fetchAwaiting","fetchBlocked","style","width","children","display","justifyContent","alignItems","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","marginBottom","padding","borderRadius","color","message","xAxis","scaleType","series","height","sx","fill","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/components/chart/TotalChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BarChart } from '@mui/x-charts/BarChart';\nimport { FcBarChart } from \"react-icons/fc\";\n\nfunction TotalChart() {\n  const [available, setAvailable] = useState(null);\n  const [awaiting, setAwaiting] = useState(null);\n  const [blocked, setBlocked] = useState(null);\n  const [error, setError] = useState(null); \n\n  useEffect(() => {\n    const fetchAvailable = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/available`);\n        if (!response.ok) {\n          throw new Error('Network response for available data was not ok');\n        }\n        const data = await response.json();\n        setAvailable(data); \n      } catch (error) {\n        console.error('Error fetching available data:', error);\n        setError(error);\n      }\n    };\n\n    const fetchAwaiting = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/awaiting`);\n        if (!response.ok) {\n          throw new Error('Network response for awaiting data was not ok');\n        }\n        const data = await response.json();\n        setAwaiting(data); \n      } catch (error) {\n        console.error('Error fetching awaiting data:', error);\n        setError(error);\n      }\n    };\n\n    const fetchBlocked = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/blocked`);\n        if (!response.ok) {\n          throw new Error('Network response for blocked data was not ok');\n        }\n        const data = await response.json();\n        setBlocked(data); \n      } catch (error) {\n        console.error('Error fetching blocked data:', error);\n        setError(error);\n      }\n    };\n\n    fetchAvailable();\n    fetchAwaiting();\n    fetchBlocked();\n  }, []); \n\n  return (\n    <div style={{ width: \"100%\" }}>\n\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <div>\n        <h2 style={{ textAlign: 'left' }}>Story Points Summary</h2>\n          <h5 style={{ textAlign: 'left', fontSize: '15px' }}>Review the state of the backlog</h5>\n        </div>\n        <div style={{ fontSize: '50px', marginBottom: '20px', padding: '10px', borderRadius: '10px', color: 'red' }}>\n  <FcBarChart />\n</div>\n\n\n      </div>\n\n\n      {error && <div>Error: {error.message}</div>}\n      <BarChart\n        xAxis={[{ scaleType: 'band', data: ['Available', 'Awaiting Client', 'Blocked'] }]}\n        series={[{ data: [available, awaiting, blocked] }]}\n        width={500}\n        height={300}\n        sx={{\n          \"& .MuiBarElement-root:nth-of-type(1)\": {\n            fill: \"#0F415A\",\n          },\n          \"& .MuiBarElement-root:nth-of-type(2)\": {\n            fill: \"#EC1D24\",\n          },\n          \"& .MuiBarElement-root:nth-of-type(3)\": {\n            fill: \"#EC1D24\",\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default TotalChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}