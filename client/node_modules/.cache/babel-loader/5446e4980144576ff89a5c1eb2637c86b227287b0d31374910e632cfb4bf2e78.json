{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/TotalStoryPointBarChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TotalStoryPointBarChart() {\n  _s();\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    fetch('http://localhost:4000/api/available-sp').then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to fetch data');\n      }\n      return response.json(); // Parse JSON data\n    }).then(data => {\n      console.log('Fetched data:', data); // Log the fetched data\n      setData(data); // Set data to state\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n    });\n  }, []);\n  console.log('State data:', data); // Log the state data\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(TotalStoryPointBarChart, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = TotalStoryPointBarChart;\nexport default TotalStoryPointBarChart;\nvar _c;\n$RefreshReg$(_c, \"TotalStoryPointBarChart\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TotalStoryPointBarChart","_s","data","setData","fetch","then","response","ok","Error","json","console","log","catch","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/TotalStoryPointBarChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction TotalStoryPointBarChart() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    fetch('http://localhost:4000/api/available-sp')\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Failed to fetch data');\n        }\n        return response.json(); // Parse JSON data\n      })\n      .then(data => {\n        console.log('Fetched data:', data); // Log the fetched data\n        setData(data); // Set data to state\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n      });\n  }, []);\n\n  console.log('State data:', data); // Log the state data\n\n  return (\n    <div>\n      {/* Render your UI here */}\n    </div>\n  );\n}\n\nexport default TotalStoryPointBarChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,uBAAuBA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,wCAAwC,CAAC,CAC5CC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MACzC;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACH,IAAI,IAAI;MACZQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAET,IAAI,CAAC,CAAC,CAAC;MACpCC,OAAO,CAACD,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENH,OAAO,CAACC,GAAG,CAAC,aAAa,EAAET,IAAI,CAAC,CAAC,CAAC;;EAElC,oBACEH,OAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV;AAAChB,EAAA,CA3BQD,uBAAuB;AAAAkB,EAAA,GAAvBlB,uBAAuB;AA6BhC,eAAeA,uBAAuB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}