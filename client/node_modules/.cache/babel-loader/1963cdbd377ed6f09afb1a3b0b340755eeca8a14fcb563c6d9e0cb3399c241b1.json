{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/components/tables/AwaitingTableTest.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AwaitingTableTest() {\n  _s();\n  const [awaitingData, setAwaitingData] = useState(null);\n  useEffect(() => {\n    const fetchAwaiting = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/awaiting-data`);\n        if (!response.ok) {\n          throw new Error('Network response for awaiting data was not ok');\n        }\n        const data = await response.json();\n        setAwaitingData(data);\n      } catch (error) {\n        console.error('Error fetching awaiting data:', error);\n      }\n    };\n    fetchAwaiting();\n  }, []);\n  console.log(awaitingData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(AwaitingTableTest, \"XS2SlVr2UdCpcBtbv3d5eC0weO4=\");\n_c = AwaitingTableTest;\nexport default AwaitingTableTest;\nvar _c;\n$RefreshReg$(_c, \"AwaitingTableTest\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AwaitingTableTest","_s","awaitingData","setAwaitingData","fetchAwaiting","response","fetch","ok","Error","data","json","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/components/tables/AwaitingTableTest.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \n\nfunction AwaitingTableTest() {\n\n    const [awaitingData, setAwaitingData] = useState(null);\n\n    useEffect(() => {\n    \n        const fetchAwaiting = async () => {\n          try {\n            const response = await fetch(`http://localhost:4000/api/awaiting-data`);\n            if (!response.ok) {\n              throw new Error('Network response for awaiting data was not ok');\n            }\n            const data = await response.json();\n            setAwaitingData(data); \n          } catch (error) {\n            console.error('Error fetching awaiting data:', error);\n          }\n        };\n    \n        fetchAwaiting();\n      }, []); \n\n      console.log(awaitingData)\n  return (\n    <div>hi</div>\n\n  );\n}\n\nexport default AwaitingTableTest;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAEzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IAEZ,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwC,CAAC;QACvE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;QAClE;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,eAAe,CAACM,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDP,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAENQ,OAAO,CAACC,GAAG,CAACX,YAAY,CAAC;EAC7B,oBACEH,OAAA;IAAAe,QAAA,EAAK;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAGjB;AAACjB,EAAA,CA3BQD,iBAAiB;AAAAmB,EAAA,GAAjBnB,iBAAiB;AA6B1B,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}