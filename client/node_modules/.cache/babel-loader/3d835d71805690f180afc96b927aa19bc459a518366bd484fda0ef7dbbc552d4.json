{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/components/buttons/MoodCheck.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodCheck() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [availableTotal, setAvailableTotal] = useState(false);\n  useEffect(() => {\n    const fetchAvailableTotal = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/available-total`);\n        if (!response.ok) {\n          throw new Error('Network response for available data was not ok');\n        }\n        const data = await response.json();\n        setAvailableTotal(data);\n      } catch (error) {\n        console.error('Error fetching available total data:', error);\n        setError(error);\n      }\n    };\n    fetchAvailableTotal();\n  }, []);\n  console.log(availableTotal);\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'left'\n        },\n        children: \"Hows My Mood?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShowModal,\n        children: \"Check Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Mood Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"How are you feeling today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(MoodCheck, \"3wkrc1/tGySJn0nLrCa/Ou27+js=\");\n_c = MoodCheck;\nexport default MoodCheck;\nvar _c;\n$RefreshReg$(_c, \"MoodCheck\");","map":{"version":3,"names":["React","useState","Button","Modal","jsxDEV","_jsxDEV","MoodCheck","_s","showModal","setShowModal","availableTotal","setAvailableTotal","useEffect","fetchAvailableTotal","response","fetch","ok","Error","data","json","error","console","setError","log","handleShowModal","handleCloseModal","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onClick","show","onHide","Header","closeButton","Title","Body","Footer","variant","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/components/buttons/MoodCheck.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction MoodCheck() {\n  const [showModal, setShowModal] = useState(false);\n  const [availableTotal, setAvailableTotal] = useState(false);\n\n  useEffect(() => {\n    const fetchAvailableTotal = async () => {\n        try {\n            const response = await fetch(`http://localhost:4000/api/available-total`);\n            if (!response.ok) {\n                throw new Error('Network response for available data was not ok');\n            }\n            const data = await response.json();\n            setAvailableTotal(data);\n        } catch (error) {\n            console.error('Error fetching available total data:', error);\n            setError(error);\n        }\n    };\n\n    fetchAvailableTotal();\n  }, []);\n\n  console.log(availableTotal)\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div>\n      <div>\n        <h2 style={{ textAlign: 'left' }}>Hows My Mood?</h2>\n      </div>\n      <div>\n        <Button onClick={handleShowModal}>Check Mood</Button>\n      </div>\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Mood Check</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <p>How are you feeling today?</p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default MoodCheck;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}