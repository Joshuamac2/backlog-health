{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sprData, setSprData] = useState([]);\n  const [blockedSprData, setBlockedSprData] = useState([]);\n  const fetchSpr = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/jira/spr');\n      const responseData = await response.json();\n      setSprData(responseData.issues);\n    } catch (error) {\n      console.error('Error fetching SPR data:', error);\n    }\n  };\n  const fetchBlockedSpr = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/jira/blocked-spr');\n      const responseData = await response.json();\n      setBlockedSprData(responseData.issues);\n    } catch (error) {\n      console.error('Error fetching Blocked SPR data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchSpr();\n    fetchBlockedSpr();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"JIRA Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SPR Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: sprData.map((issue, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Key: \", issue.key]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Story Points: \", issue.fields.customfield_10004]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Blocked SPR Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: blockedSprData.map((issue, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Key: \", issue.key]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Story Points: \", issue.fields.customfield_10004]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tvXsSxKNk9GA/V440oRk5VCj5sI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","sprData","setSprData","blockedSprData","setBlockedSprData","fetchSpr","response","fetch","responseData","json","issues","error","console","fetchBlockedSpr","children","fileName","_jsxFileName","lineNumber","columnNumber","map","issue","index","key","fields","customfield_10004","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [sprData, setSprData] = useState([]);\n  const [blockedSprData, setBlockedSprData] = useState([]);\n\n  const fetchSpr = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/jira/spr');\n      const responseData = await response.json();\n      setSprData(responseData.issues); \n    } catch (error) {\n      console.error('Error fetching SPR data:', error);\n    }\n  };\n\n  const fetchBlockedSpr = async () => {\n    try {\n      const response = await fetch('http://localhost:4000/jira/blocked-spr');\n      const responseData = await response.json();\n      setBlockedSprData(responseData.issues); \n    } catch (error) {\n      console.error('Error fetching Blocked SPR data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchSpr();\n    fetchBlockedSpr();\n  }, []);\n\n  return (\n    <div>\n      <h1>JIRA Data</h1>\n      <h2>SPR Data</h2>\n      <ul>\n        {sprData.map((issue, index) => (\n          <li key={index}>\n            <div>Key: {issue.key}</div>\n            <div>Story Points: {issue.fields.customfield_10004}</div>\n          </li>\n        ))}\n      </ul>\n      <h2>Blocked SPR Data</h2>\n      <ul>\n        {blockedSprData.map((issue, index) => (\n          <li key={index}>\n            <div>Key: {issue.key}</div>\n            <div>Story Points: {issue.fields.customfield_10004}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}