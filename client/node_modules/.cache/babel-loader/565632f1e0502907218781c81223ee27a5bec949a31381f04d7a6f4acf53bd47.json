{"ast":null,"code":"var _jsxFileName = \"/Users/joshuamacleod/Desktop/projects/jira/client/src/components/buttons/MoodCheck.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import { Button, Modal } from \"react-bootstrap\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// function MoodCheck() {\n//   const [showModal, setShowModal] = useState(false);\n//   const [availableTotal, setAvailableTotal] = useState(false);\n\n//   useEffect(() => {\n//     const fetchAvailableTotal = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:4000/api/check-mood`);\n//         if (!response.ok) {\n//           throw new Error('Network response for available data was not ok');\n//         }\n//         const data = await response.json();\n//         setAvailableTotal(data);\n//       } catch (error) {\n//         console.error('Error fetching available total data:', error);\n//       }\n//     };\n\n//     fetchAvailableTotal();\n//   }, []);\n\n//   const handleShowModal = () => {\n//     setShowModal(true);\n//   };\n\n//   const handleCloseModal = () => {\n//     setShowModal(false);\n//   };\n\n//   return (\n//     <div>\n//       <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//         <div>\n//           <h2 style={{ textAlign: 'left' }}>How's My Mood?</h2>\n//           <h5 style={{ textAlign: 'left', fontSize: '15px', marginBottom: '20px' }}>Hug your PMs</h5>\n//         </div>\n//         <div style={{ width: '40%', marginBottom: '20px', color: '#0F415A' }}>\n//           <img src=\"/moodcheck.png\" className=\"img-fluid\" alt=\"Responsive image\"/>\n//         </div>\n//       </div>\n//       <div>\n//         <Button onClick={handleShowModal} style={{ width: '100%', backgroundColor: '#E70127', borderColor: '#E70127' }}>Check Mood</Button>\n//       </div>\n//       <Modal show={showModal} onHide={handleCloseModal}>\n//         <Modal.Header closeButton style={{ backgroundColor: \"#0F415A\", color: \"white\" }}>\n//           <Modal.Title>How's Josh feeling today?</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {availableTotal < 300 ? (\n//             <img src=\"/moodcheck1.png\" className=\"img-fluid\" alt=\"Responsive image\" />\n//           ) : (\n//             <img src=\"/moodcheck2.png\" className=\"img-fluid\" alt=\"Responsive image\" />\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleCloseModal} style={{ backgroundColor: '#E70127', borderColor: '#E70127' }}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default MoodCheck;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoodCheck() {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [availableTotal, setAvailableTotal] = useState(false);\n  useEffect(() => {\n    const fetchAvailableTotal = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/check-mood`);\n        if (!response.ok) {\n          throw new Error('Network response for available data was not ok');\n        }\n        const data = await response.json();\n        setAvailableTotal(data);\n      } catch (error) {\n        console.error('Error fetching available total data:', error);\n      }\n    };\n    fetchAvailableTotal();\n  }, []);\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleShowModal,\n        style: {\n          width: '100%',\n          backgroundColor: '#E70127',\n          borderColor: '#E70127'\n        },\n        children: \"Check Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        style: {\n          backgroundColor: \"#0F415A\",\n          color: \"red\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"How's Josh feeling today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: availableTotal < 300 ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/moodcheck1.png\",\n          className: \"img-fluid\",\n          alt: \"Responsive image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/moodcheck2.png\",\n          className: \"img-fluid\",\n          alt: \"Responsive image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseModal,\n          style: {\n            backgroundColor: '#E70127',\n            borderColor: '#E70127'\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n_s(MoodCheck, \"3wkrc1/tGySJn0nLrCa/Ou27+js=\");\n_c = MoodCheck;\nexport default MoodCheck;\nvar _c;\n$RefreshReg$(_c, \"MoodCheck\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","jsxDEV","_jsxDEV","MoodCheck","_s","showModal","setShowModal","availableTotal","setAvailableTotal","fetchAvailableTotal","response","fetch","ok","Error","data","json","error","console","handleShowModal","handleCloseModal","children","onClick","style","width","backgroundColor","borderColor","fileName","_jsxFileName","lineNumber","columnNumber","show","onHide","Header","closeButton","color","Title","Body","src","className","alt","Footer","variant","_c","$RefreshReg$"],"sources":["/Users/joshuamacleod/Desktop/projects/jira/client/src/components/buttons/MoodCheck.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { Button, Modal } from \"react-bootstrap\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// function MoodCheck() {\n//   const [showModal, setShowModal] = useState(false);\n//   const [availableTotal, setAvailableTotal] = useState(false);\n\n//   useEffect(() => {\n//     const fetchAvailableTotal = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:4000/api/check-mood`);\n//         if (!response.ok) {\n//           throw new Error('Network response for available data was not ok');\n//         }\n//         const data = await response.json();\n//         setAvailableTotal(data);\n//       } catch (error) {\n//         console.error('Error fetching available total data:', error);\n//       }\n//     };\n\n//     fetchAvailableTotal();\n//   }, []);\n\n//   const handleShowModal = () => {\n//     setShowModal(true);\n//   };\n\n//   const handleCloseModal = () => {\n//     setShowModal(false);\n//   };\n\n//   return (\n//     <div>\n//       <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//         <div>\n//           <h2 style={{ textAlign: 'left' }}>How's My Mood?</h2>\n//           <h5 style={{ textAlign: 'left', fontSize: '15px', marginBottom: '20px' }}>Hug your PMs</h5>\n//         </div>\n//         <div style={{ width: '40%', marginBottom: '20px', color: '#0F415A' }}>\n//           <img src=\"/moodcheck.png\" className=\"img-fluid\" alt=\"Responsive image\"/>\n//         </div>\n//       </div>\n//       <div>\n//         <Button onClick={handleShowModal} style={{ width: '100%', backgroundColor: '#E70127', borderColor: '#E70127' }}>Check Mood</Button>\n//       </div>\n//       <Modal show={showModal} onHide={handleCloseModal}>\n//         <Modal.Header closeButton style={{ backgroundColor: \"#0F415A\", color: \"white\" }}>\n//           <Modal.Title>How's Josh feeling today?</Modal.Title>\n//         </Modal.Header>\n//         <Modal.Body>\n//           {availableTotal < 300 ? (\n//             <img src=\"/moodcheck1.png\" className=\"img-fluid\" alt=\"Responsive image\" />\n//           ) : (\n//             <img src=\"/moodcheck2.png\" className=\"img-fluid\" alt=\"Responsive image\" />\n//           )}\n//         </Modal.Body>\n//         <Modal.Footer>\n//           <Button variant=\"secondary\" onClick={handleCloseModal} style={{ backgroundColor: '#E70127', borderColor: '#E70127' }}>\n//             Close\n//           </Button>\n//         </Modal.Footer>\n//       </Modal>\n//     </div>\n//   );\n// }\n\n// export default MoodCheck;\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction MoodCheck() {\n  const [showModal, setShowModal] = useState(false);\n  const [availableTotal, setAvailableTotal] = useState(false);\n\n  useEffect(() => {\n    const fetchAvailableTotal = async () => {\n      try {\n        const response = await fetch(`http://localhost:4000/api/check-mood`);\n        if (!response.ok) {\n          throw new Error('Network response for available data was not ok');\n        }\n        const data = await response.json();\n        setAvailableTotal(data);\n      } catch (error) {\n        console.error('Error fetching available total data:', error);\n      }\n    };\n\n    fetchAvailableTotal();\n  }, []);\n\n  const handleShowModal = () => {\n    setShowModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n\n  return (\n    <div>\n      <div>\n        <Button onClick={handleShowModal} style={{ width: '100%', backgroundColor: '#E70127', borderColor: '#E70127' }}>Check Mood</Button>\n      </div>\n      <Modal show={showModal} onHide={handleCloseModal}>\n        <Modal.Header closeButton style={{ backgroundColor: \"#0F415A\", color: \"red\" }}>\n          <Modal.Title>How's Josh feeling today?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          {availableTotal < 300 ? (\n            <img src=\"/moodcheck1.png\" className=\"img-fluid\" alt=\"Responsive image\" />\n          ) : (\n            <img src=\"/moodcheck2.png\" className=\"img-fluid\" alt=\"Responsive image\" />\n          )}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal} style={{ backgroundColor: '#E70127', borderColor: '#E70127' }}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  );\n}\n\nexport default MoodCheck;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}